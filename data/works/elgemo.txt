id:04
heading:Elgemo
github_link:
frontend_link:github.com/aatbip/elgemo-frontend
backend_link:github.com/aatbip/elgemo-api
live_link:chat.anantabipal.dev
short_description:Elgemo can create chat rooms by matching random users called as strangers, same like Omegle!
images:elgemo-1.png elgemo-2.png elgemo-3.png
description:This app is the outcome of my long time enthusiasm to create a chat app. 
<h3><b>Technologies Used</b></h3><ul><li>Socket.io</li><li>React</li><li>Redux Toolkit</li><li>React Router</li><li>Node.js</li><li>Express</li><li>Mongoose</li></ul>
<h3><b>Steps</b></h3>
When a stranger enters, an "login" event is emitted <code> socket.emit("login", (error) => {}</code> from the socket.io client which is received by the server <code>socket.on("login", cb)</code> and triggers a function to check if any room has less than 2 strangers.
If no room is found with  less than 2 strangers then a new room is created and a "notification" event is emitted to the client <code> socket.emit("notification", { notice: "Waiting for someone..." })</code> Room is an entry in the database with unique ID and the IDs of the strangers in the room.
If a room with less than 2 strangers are found then a random room ID is choosen, socket connection is made between two strangers <code>socket.join(selectedUser.room)</code> and a new notification event is emitted.The process can calculate the total number of users by incrementing <code>let count = 0</code> after every new "connection" event.
When any user leaves the room a new event is emitted that carries the user ID <code>socket.emit("leaveroom", {user: user})</code> which is received by the server and removes the user from the room. When both the users leave the room, then the room is deleted from the database.
